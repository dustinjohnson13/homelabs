---
- include_role:
    name: "{{ role }}"
  with_items:
    - common
    - java
  loop_control:
    loop_var: role

- include_vars: main.yml

- name: Install jenkins apt repository key
  apt_key:
    url: "https://pkg.jenkins.io/debian-stable/jenkins.io.key"
    state: present

- name: Install jenkins apt repository
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present

- name: Install list of packages
  apt: name={{item}} state=present
  with_items:
    - jenkins
    - python-pip
    - python-lxml
    - youtube-dl
    - ffmpeg
    - virtualenv # Required by flexget
    # Required by photo/video processing
    - libimage-exiftool-perl
    - par2
    - rename
    # Required by cox data usage retriever
    - gconf-service
    - libasound2
    - libatk1.0-0
    - libc6
    - libcairo2
    - libcups2
    - libdbus-1-3
    - libexpat1
    - libfontconfig1
    - libgcc1
    - libgconf-2-4
    - libgdk-pixbuf2.0-0
    - libglib2.0-0
    - libgtk-3-0
    - libnspr4
    - libpango-1.0-0
    - libpangocairo-1.0-0
    - libstdc++6
    - libx11-6
    - libx11-xcb1
    - libxcb1
    - libxcomposite1
    - libxcursor1
    - libxdamage1
    - libxext6
    - libxfixes3
    - libxi6
    - libxrandr2
    - libxrender1
    - libxss1
    - libxtst6
    - ca-certificates
    - fonts-liberation
    - libappindicator1
    - libnss3
    - lsb-release
    - xdg-utils
    - wget

- name: Shutdown applications for configuration
  service: name={{item}} state=stopped
  with_items:
    - jenkins

- name: Create necessary directories
  file: path={{ item.value.path }} owner={{ item.value.owner }} group={{ item.value.group }} state=directory mode={{ item.value.mode }}
  with_dict: "{{ directories }}"

- name: Copy configuration files
  template: src={{ item.value.src }} dest={{ item.value.dest }} owner={{ item.value.owner }} group={{ item.value.group }} mode={{ item.value.mode }}
  with_dict: "{{ config_files }}"

- name: Startup applications
  service: name={{item}} state=started
  with_items:
    - jenkins

- name: Wait until Jenkins web interface is available
  wait_for: "host=localhost port=8080 state=present delay=30 timeout=300"

- name: Install plugins
  jenkins_plugin: name={{ item }}
  with_items:
    - git
    - workflow-aggregator
    - htmlpublisher
    - email-ext

- name: Restart Jenkins
  service:
    name: jenkins
    state: restarted

- name: Wait until Jenkins web interface is available
  wait_for: "host=localhost port=8080 state=present delay=30 timeout=300"

- name: Install python-jenkins
  pip: name=python-jenkins

- name: Configure jobs
  jenkins_job: config="{{ lookup('template', 'job-config.xml') }}" name='{{ item.key }}' url=http://localhost:8080
  with_dict: "{{ jobs }}"

- name: ensure jenkins is in the sudoers file
  lineinfile: "dest=/etc/sudoers
    insertafter=EOF
    line='jenkins ALL = NOPASSWD: ALL'
    regexp='jenkins ALL = NOPASSWD: ALL'
    state=present"
  become: yes